{
    "openapi": "3.0.1",
    "info": {
        "title": "EventManager API Documentation",
        "version": "1.0.0"
    },
    "schemes": [
        "http"
    ],
    "servers": [
        {
            "url": "http://localhost:8080/"
        }
    ],
    "paths": {
        "api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Login with email and password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test2@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Testpassword1:"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in with success."
                                        },
                                        "payload": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "6634b5d0121d8bb899ae60b8"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "ADMIN"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "test2@gmail.com"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No user is registered with this email."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with the provided details",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "description": "The first name of the user"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "description": "The last name of the user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "The email address of the user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "The password of the user"
                                    },
                                    "subscribedEvent": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "An array of event IDs the user is subscribed to"
                                    },
                                    "eventHeld": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "An array of event IDs held by the user"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "USER",
                                            "MANAGER"
                                        ],
                                        "description": "The role of the user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "A message confirming the successful creation of the user"
                                        },
                                        "payload": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "description": "The value that caused the validation error"
                                                    },
                                                    "msg": {
                                                        "type": "string",
                                                        "description": "The error message"
                                                    },
                                                    "param": {
                                                        "type": "string",
                                                        "description": "The parameter that caused the validation error"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "description": "The location of the validation error"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout the current user",
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "Retrieve all users from the database",
                "responses": {
                    "200": {
                        "description": "Users fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "A message confirming the successful retrieval of users"
                                        },
                                        "payload": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string",
                                                        "description": "The unique identifier of the user"
                                                    },
                                                    "firstName": {
                                                        "type": "string",
                                                        "description": "The first name of the user"
                                                    },
                                                    "lastName": {
                                                        "type": "string",
                                                        "description": "The last name of the user"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "description": "The email address of the user"
                                                    },
                                                    "subscribedEvent": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "An array of IDs of events the user is subscribed to"
                                                    },
                                                    "eventHeld": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "An array of IDs of events held by the user"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "description": "The date and time when the user was created"
                                                    },
                                                    "__v": {
                                                        "type": "integer",
                                                        "description": "The version of the user document"
                                                    }
                                                }
                                            },
                                            "description": "An array containing user objects"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "description": "Retrieve a user from the database by their ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the user to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user found with this id"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update user by ID",
                "description": "Update a user in the database by their ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the user to update"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user found with this id"
                    },
                    "400": {
                        "description": "Duplicate data"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user by ID",
                "description": "Delete a user from the database by their ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the user to delete"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "No user to delete found with this id"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/event/subscribe/{id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Subscribe to an event",
                "description": "Subscribe a user to an event by its ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the event to subscribe to"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscribed to event successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Event already exists in user subscribedEvent list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/event/unsubscribe/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Unsubscribe from an event",
                "description": "Unsubscribe a user from an event by its ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the event to unsubscribe from"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unsubscribed from event successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or Event not found or Event not found in user subscribedEvent list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}